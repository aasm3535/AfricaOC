; src/kernel_entry.asm
bits 16

section .text
global _start
extern kmain

_start:
    ; === Настройка сегментов и стека для среды C ===

    ; Устанавливаем сегментные регистры в 0. Это хорошая практика.
    mov ax, 0
    mov ds, ax
    mov es, ax

    ; Устанавливаем сегмент стека в 0 и указатель стека в 0x7C00.
    ; Это КЛЮЧЕВОЙ МОМЕНТ.
    ; Стек будет начинаться с адреса 0x7C00 и расти ВНИЗ (к 0x0000).
    ; Это дает нам всю память от 0x0000 до 0x7BFF под стек, что абсолютно
    ; безопасно и не затронет ни код загрузчика (в 0x7C00), ни код ядра (в 0x7E00).
    mov ss, ax
    mov sp, 0x7C00  ; Устанавливаем вершину стека
    mov bp, sp      ; Базовый указатель часто тоже устанавливают равным sp

    ; === Вызов ядра на C ===

    ; Теперь, когда среда (особенно стек) готова, мы можем безопасно
    ; вызывать нашу главную C-функцию.
    call kmain

    ; Если kmain по какой-то причине вернет управление,
    ; мы безопасно останавливаем систему здесь.
.hang:
    cli
    hlt
    jmp .hang
